#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * Build script to generate TypeScript files containing Rust example code
 * This reads Rust files from examples/rust/src/ and generates corresponding
 * TypeScript modules that export the code as strings.
 */

const RUST_EXAMPLES_DIR = path.join(__dirname, '../examples/rust/src');
const OUTPUT_FILE = path.join(__dirname, '../src/lib/rust-examples.ts');

function escapeForTypeScript(rustCode) {
  // Escape backticks and backslashes for template literal
  return rustCode
    .replace(/\\/g, '\\\\')
    .replace(/`/g, '\\`')
    .replace(/\$\{/g, '\\${');
}

function generateRustExamplesFile() {
  console.log('🦀 Building Rust examples...');
  
  const rustFiles = fs.readdirSync(RUST_EXAMPLES_DIR)
    .filter(file => file.endsWith('.rs'));
  
  if (rustFiles.length === 0) {
    console.warn('⚠️  No Rust files found in', RUST_EXAMPLES_DIR);
    return;
  }

  let output = `// Auto-generated file - DO NOT EDIT MANUALLY
// Generated by scripts/build-rust-examples.js
// This file contains Rust example code loaded from examples/rust/src/

`;

  rustFiles.forEach(file => {
    const filePath = path.join(RUST_EXAMPLES_DIR, file);
    const rustCode = fs.readFileSync(filePath, 'utf-8');
    const escapedCode = escapeForTypeScript(rustCode);
    const varName = file.replace('.rs', '').replace(/-/g, '_') + 'Rust';
    
    output += `export const ${varName} = \`${escapedCode}\`;\n\n`;
    
    console.log(`✅ Processed ${file} -> ${varName}`);
  });

  fs.writeFileSync(OUTPUT_FILE, output);
  console.log(`🎉 Generated ${OUTPUT_FILE}`);
  console.log(`📦 Exported ${rustFiles.length} Rust examples`);
}

// Run the build
try {
  generateRustExamplesFile();
} catch (error) {
  console.error('❌ Error building Rust examples:', error);
  process.exit(1);
}