import { PatternScenario } from './types';
import { nodeStyle, edgeStyle } from './styles';

export const intelligentGoalDecompositionPattern: PatternScenario = {
  id: 'goal-decomposition',
  title: 'Intelligent Goal Decomposition',
  description: 'Automated breakdown of complex strategic goals into manageable sub-goals and tasks, using dependency analysis and resource constraints to create executable action plans.',
  initialNodes: [
    {
      id: 'strategic-goal',
      position: { x: 400, y: 50 },
      data: { label: '🎯 Strategic Goal\n"Increase customer retention by 30%"' },
      style: { ...nodeStyle, background: '#10b981', minWidth: 280 },
    },
    {
      id: 'goal-analyzer',
      position: { x: 375, y: 150 },
      data: { label: '🧠 Goal Analyzer\nUnderstand objectives & constraints' },
      style: { ...nodeStyle, background: '#3b82f6', minWidth: 250 },
    },
    {
      id: 'decomposition-engine',
      position: { x: 650, y: 150 },
      data: { label: '🔨 Decomposition Engine\nBreak down into sub-goals' },
      style: { ...nodeStyle, background: '#3b82f6', minWidth: 200 },
    },
    // Analysis Components
    {
      id: 'context-analyzer',
      position: { x: 100, y: 250 },
      data: { label: '📊 Context Analysis\nCurrent: 65% retention\nIndustry avg: 72%' },
      style: { ...nodeStyle, background: '#7c3aed', minWidth: 180 },
    },
    {
      id: 'constraint-identifier',
      position: { x: 300, y: 250 },
      data: { label: '🔒 Constraint Identifier\nBudget: $500K\nTimeline: 6 months' },
      style: { ...nodeStyle, background: '#7c3aed', minWidth: 180 },
    },
    {
      id: 'success-criteria',
      position: { x: 500, y: 250 },
      data: { label: '✅ Success Criteria\nMeasurable: Yes\nTime-bound: Yes\nAchievable: TBD' },
      style: { ...nodeStyle, background: '#7c3aed', minWidth: 180 },
    },
    {
      id: 'stakeholder-mapper',
      position: { x: 700, y: 250 },
      data: { label: '👥 Stakeholder Mapping\nSales, Support, Product\nMarketing, Engineering' },
      style: { ...nodeStyle, background: '#7c3aed', minWidth: 180 },
    },
    // Level 1 Sub-goals
    {
      id: 'subgoal-experience',
      position: { x: 100, y: 380 },
      data: { label: '🎨 Improve Experience\nTarget: +15 NPS\nOwner: Product Team' },
      style: { ...nodeStyle, background: '#f59e0b', minWidth: 170 },
    },
    {
      id: 'subgoal-support',
      position: { x: 300, y: 380 },
      data: { label: '💬 Enhance Support\nTarget: <2hr response\nOwner: Support Team' },
      style: { ...nodeStyle, background: '#f59e0b', minWidth: 170 },
    },
    {
      id: 'subgoal-engagement',
      position: { x: 500, y: 380 },
      data: { label: '📈 Boost Engagement\nTarget: 3x/week usage\nOwner: Marketing' },
      style: { ...nodeStyle, background: '#f59e0b', minWidth: 170 },
    },
    {
      id: 'subgoal-onboarding',
      position: { x: 700, y: 380 },
      data: { label: '🚀 Optimize Onboarding\nTarget: 80% completion\nOwner: Product' },
      style: { ...nodeStyle, background: '#f59e0b', minWidth: 170 },
    },
    // Level 2 - Actionable Tasks
    {
      id: 'task-ui-redesign',
      position: { x: 50, y: 520 },
      data: { label: '🖼️ UI Redesign\nKPI: Task completion +20%\nDue: Month 2' },
      style: { ...nodeStyle, background: '#ec4899', minWidth: 150 },
    },
    {
      id: 'task-performance',
      position: { x: 200, y: 520 },
      data: { label: '⚡ Performance\nKPI: Load time <2s\nDue: Month 1' },
      style: { ...nodeStyle, background: '#ec4899', minWidth: 150 },
    },
    {
      id: 'task-chat-support',
      position: { x: 350, y: 520 },
      data: { label: '💬 24/7 Chat\nKPI: 90% satisfaction\nDue: Month 2' },
      style: { ...nodeStyle, background: '#ec4899', minWidth: 150 },
    },
    {
      id: 'task-email-campaign',
      position: { x: 500, y: 520 },
      data: { label: '📧 Email Campaign\nKPI: 25% open rate\nDue: Ongoing' },
      style: { ...nodeStyle, background: '#ec4899', minWidth: 150 },
    },
    {
      id: 'task-tutorial',
      position: { x: 650, y: 520 },
      data: { label: '📚 Tutorials\nKPI: 70% view rate\nDue: Month 1' },
      style: { ...nodeStyle, background: '#ec4899', minWidth: 150 },
    },
    // Measurement & Validation
    {
      id: 'kpi-tracker',
      position: { x: 100, y: 650 },
      data: { label: '📊 KPI Tracker\nReal-time metrics dashboard' },
      style: { ...nodeStyle, background: '#ef4444', minWidth: 180 },
    },
    {
      id: 'dependency-validator',
      position: { x: 300, y: 650 },
      data: { label: '🔗 Dependency Validator\nCheck goal relationships' },
      style: { ...nodeStyle, background: '#ef4444', minWidth: 180 },
    },
    {
      id: 'feasibility-checker',
      position: { x: 500, y: 650 },
      data: { label: '⚖️ Feasibility Checker\nValidate achievability' },
      style: { ...nodeStyle, background: '#ef4444', minWidth: 180 },
    },
    {
      id: 'progress-aggregator',
      position: { x: 700, y: 650 },
      data: { label: '📈 Progress Aggregator\nRoll up sub-goal progress' },
      style: { ...nodeStyle, background: '#ef4444', minWidth: 180 },
    },
    // Adaptation Layer
    {
      id: 'goal-adjuster',
      position: { x: 250, y: 780 },
      data: { label: '🔄 Goal Adjuster\nRefine based on progress' },
      style: { ...nodeStyle, background: '#6366f1', minWidth: 180 },
    },
    {
      id: 'resource-reallocator',
      position: { x: 450, y: 780 },
      data: { label: '💰 Resource Reallocator\nOptimize budget allocation' },
      style: { ...nodeStyle, background: '#6366f1', minWidth: 180 },
    },
    {
      id: 'risk-mitigator',
      position: { x: 650, y: 780 },
      data: { label: '⚠️ Risk Mitigator\nAddress blockers proactively' },
      style: { ...nodeStyle, background: '#6366f1', minWidth: 180 },
    },
    {
      id: 'output',
      position: { x: 400, y: 900 },
      data: { label: '✨ Goal Achievement Plan\nActionable roadmap with measurable milestones' },
      style: { ...nodeStyle, background: '#10b981', minWidth: 300 },
    },
  ],
  initialEdges: [
    {
      id: 'goal-analyzer',
      source: 'strategic-goal',
      target: 'goal-analyzer',
      style: { ...edgeStyle, stroke: '#3b82f6' },
      animated: true,
    },
    {
      id: 'analyzer-engine',
      source: 'goal-analyzer',
      target: 'decomposition-engine',
      style: { ...edgeStyle, stroke: '#3b82f6' },
      label: 'Process',
    },
    {
      id: 'analyzer-context',
      source: 'goal-analyzer',
      target: 'context-analyzer',
      style: { ...edgeStyle, stroke: '#7c3aed' },
      label: 'Analyze',
    },
    {
      id: 'analyzer-constraint',
      source: 'goal-analyzer',
      target: 'constraint-identifier',
      style: { ...edgeStyle, stroke: '#7c3aed' },
      label: 'Identify',
    },
    {
      id: 'analyzer-criteria',
      source: 'goal-analyzer',
      target: 'success-criteria',
      style: { ...edgeStyle, stroke: '#7c3aed' },
      label: 'Define',
    },
    {
      id: 'analyzer-stakeholder',
      source: 'goal-analyzer',
      target: 'stakeholder-mapper',
      style: { ...edgeStyle, stroke: '#7c3aed' },
      label: 'Map',
    },
    {
      id: 'context-engine',
      source: 'context-analyzer',
      target: 'decomposition-engine',
      style: { ...edgeStyle, stroke: '#3b82f6', strokeDasharray: '5 5' },
    },
    {
      id: 'constraint-engine',
      source: 'constraint-identifier',
      target: 'decomposition-engine',
      style: { ...edgeStyle, stroke: '#3b82f6', strokeDasharray: '5 5' },
    },
    {
      id: 'criteria-engine',
      source: 'success-criteria',
      target: 'decomposition-engine',
      style: { ...edgeStyle, stroke: '#3b82f6', strokeDasharray: '5 5' },
    },
    // Decomposition to sub-goals
    {
      id: 'engine-experience',
      source: 'decomposition-engine',
      target: 'subgoal-experience',
      style: { ...edgeStyle, stroke: '#f59e0b' },
      label: 'Create',
    },
    {
      id: 'engine-support',
      source: 'decomposition-engine',
      target: 'subgoal-support',
      style: { ...edgeStyle, stroke: '#f59e0b' },
      label: 'Create',
    },
    {
      id: 'engine-engagement',
      source: 'decomposition-engine',
      target: 'subgoal-engagement',
      style: { ...edgeStyle, stroke: '#f59e0b' },
      label: 'Create',
    },
    {
      id: 'engine-onboarding',
      source: 'decomposition-engine',
      target: 'subgoal-onboarding',
      style: { ...edgeStyle, stroke: '#f59e0b' },
      label: 'Create',
    },
    // Sub-goals to tasks
    {
      id: 'experience-ui',
      source: 'subgoal-experience',
      target: 'task-ui-redesign',
      style: { ...edgeStyle, stroke: '#ec4899' },
    },
    {
      id: 'experience-performance',
      source: 'subgoal-experience',
      target: 'task-performance',
      style: { ...edgeStyle, stroke: '#ec4899' },
    },
    {
      id: 'support-chat',
      source: 'subgoal-support',
      target: 'task-chat-support',
      style: { ...edgeStyle, stroke: '#ec4899' },
    },
    {
      id: 'engagement-email',
      source: 'subgoal-engagement',
      target: 'task-email-campaign',
      style: { ...edgeStyle, stroke: '#ec4899' },
    },
    {
      id: 'onboarding-tutorial',
      source: 'subgoal-onboarding',
      target: 'task-tutorial',
      style: { ...edgeStyle, stroke: '#ec4899' },
    },
    // Tasks to measurement
    {
      id: 'tasks-kpi',
      source: 'task-ui-redesign',
      target: 'kpi-tracker',
      style: { ...edgeStyle, stroke: '#ef4444' },
      label: 'Track',
    },
    {
      id: 'subgoals-dependency',
      source: 'subgoal-experience',
      target: 'dependency-validator',
      style: { ...edgeStyle, stroke: '#ef4444' },
      label: 'Validate',
    },
    {
      id: 'subgoals-feasibility',
      source: 'subgoal-support',
      target: 'feasibility-checker',
      style: { ...edgeStyle, stroke: '#ef4444' },
      label: 'Check',
    },
    {
      id: 'kpi-progress',
      source: 'kpi-tracker',
      target: 'progress-aggregator',
      style: { ...edgeStyle, stroke: '#ef4444' },
    },
    {
      id: 'dependency-progress',
      source: 'dependency-validator',
      target: 'progress-aggregator',
      style: { ...edgeStyle, stroke: '#ef4444' },
    },
    {
      id: 'feasibility-progress',
      source: 'feasibility-checker',
      target: 'progress-aggregator',
      style: { ...edgeStyle, stroke: '#ef4444' },
    },
    // Adaptation feedback
    {
      id: 'progress-adjuster',
      source: 'progress-aggregator',
      target: 'goal-adjuster',
      style: { ...edgeStyle, stroke: '#6366f1' },
      label: 'Inform',
    },
    {
      id: 'progress-reallocator',
      source: 'progress-aggregator',
      target: 'resource-reallocator',
      style: { ...edgeStyle, stroke: '#6366f1' },
      label: 'Optimize',
    },
    {
      id: 'progress-mitigator',
      source: 'progress-aggregator',
      target: 'risk-mitigator',
      style: { ...edgeStyle, stroke: '#6366f1' },
      label: 'Alert',
    },
    {
      id: 'adjuster-engine',
      source: 'goal-adjuster',
      target: 'decomposition-engine',
      style: { ...edgeStyle, stroke: '#f59e0b', strokeDasharray: '5 5' },
      label: 'Refine',
    },
    {
      id: 'reallocator-constraint',
      source: 'resource-reallocator',
      target: 'constraint-identifier',
      style: { ...edgeStyle, stroke: '#7c3aed', strokeDasharray: '5 5' },
      label: 'Update',
    },
    // Final output
    {
      id: 'adjuster-output',
      source: 'goal-adjuster',
      target: 'output',
      style: { ...edgeStyle, stroke: '#10b981' },
    },
    {
      id: 'reallocator-output',
      source: 'resource-reallocator',
      target: 'output',
      style: { ...edgeStyle, stroke: '#10b981' },
    },
    {
      id: 'mitigator-output',
      source: 'risk-mitigator',
      target: 'output',
      style: { ...edgeStyle, stroke: '#10b981' },
    },
  ],
  steps: [
    {
      title: 'Strategic Goal Input',
      description: 'Define high-level objective with clear business value',
      activeNodes: ['strategic-goal'],
      activeEdges: ['goal-analyzer'],
    },
    {
      title: 'Goal Analysis',
      description: 'Analyze goal context, constraints, criteria, and stakeholders',
      activeNodes: ['goal-analyzer', 'context-analyzer', 'constraint-identifier', 'success-criteria', 'stakeholder-mapper'],
      activeEdges: ['analyzer-context', 'analyzer-constraint', 'analyzer-criteria', 'analyzer-stakeholder'],
    },
    {
      title: 'Decomposition Processing',
      description: 'Process analysis results to prepare for decomposition',
      activeNodes: ['decomposition-engine', 'context-analyzer', 'constraint-identifier', 'success-criteria'],
      activeEdges: ['analyzer-engine', 'context-engine', 'constraint-engine', 'criteria-engine'],
    },
    {
      title: 'Create Sub-Goals',
      description: 'Break down into measurable sub-goals with clear ownership',
      activeNodes: ['decomposition-engine', 'subgoal-experience', 'subgoal-support', 'subgoal-engagement', 'subgoal-onboarding'],
      activeEdges: ['engine-experience', 'engine-support', 'engine-engagement', 'engine-onboarding'],
    },
    {
      title: 'Define Actionable Tasks',
      description: 'Further decompose sub-goals into concrete tasks with KPIs',
      activeNodes: ['task-ui-redesign', 'task-performance', 'task-chat-support', 'task-email-campaign', 'task-tutorial'],
      activeEdges: ['experience-ui', 'experience-performance', 'support-chat', 'engagement-email', 'onboarding-tutorial'],
    },
    {
      title: 'Establish Measurement',
      description: 'Set up KPI tracking and validation mechanisms',
      activeNodes: ['kpi-tracker', 'dependency-validator', 'feasibility-checker'],
      activeEdges: ['tasks-kpi', 'subgoals-dependency', 'subgoals-feasibility'],
    },
    {
      title: 'Aggregate Progress',
      description: 'Consolidate progress metrics from all tracking systems',
      activeNodes: ['progress-aggregator', 'kpi-tracker', 'dependency-validator', 'feasibility-checker'],
      activeEdges: ['kpi-progress', 'dependency-progress', 'feasibility-progress'],
    },
    {
      title: 'Adaptive Planning',
      description: 'Adjust goals, reallocate resources, and mitigate risks',
      activeNodes: ['goal-adjuster', 'resource-reallocator', 'risk-mitigator'],
      activeEdges: ['progress-adjuster', 'progress-reallocator', 'progress-mitigator'],
    },
    {
      title: 'Refinement Loop',
      description: 'Feed insights back to improve decomposition',
      activeNodes: ['goal-adjuster', 'decomposition-engine', 'resource-reallocator', 'constraint-identifier'],
      activeEdges: ['adjuster-engine', 'reallocator-constraint'],
    },
    {
      title: 'Final Roadmap',
      description: 'Deliver comprehensive goal achievement plan with milestones',
      activeNodes: ['output', 'goal-adjuster', 'resource-reallocator', 'risk-mitigator'],
      activeEdges: ['adjuster-output', 'reallocator-output', 'mitigator-output'],
    },
  ],
};