import { Technique } from './types';

export const cognitiveArchitecturesTechniques: Technique[] = [
  {
    id: 'domain-reasoning',
    name: 'Domain-Specific Reasoning',
    abbr: 'DSR',
    icon: 'üéì',
    color: 'from-purple-500 to-indigo-600',
    category: 'cognitive-architectures',
    description: 'Specialized reasoning frameworks tailored to specific domains with expert knowledge integration',
    features: [
      'Domain-specific knowledge modeling',
      'Expert rule integration',
      'Specialized inference engines',
      'Context-aware reasoning',
      'Domain vocabulary handling',
      'Professional expertise simulation'
    ],
    useCases: ['medical-diagnosis', 'legal-analysis', 'engineering-design', 'financial-modeling'],
    complexity: 'high',
    example: 'Medical Diagnosis System:\n\nDomain Knowledge:\n‚Ä¢ Symptom-disease relationships\n‚Ä¢ Drug interactions database\n‚Ä¢ Treatment protocols\n‚Ä¢ Diagnostic criteria\n\nReasoning Process:\n1. Symptom Analysis:\n   - Input: "chest pain, shortness of breath"\n   - Apply cardiology rules\n   - Consider patient history\n\n2. Differential Diagnosis:\n   - Rule out: Heart attack (70% probability)\n   - Consider: Angina (20%), Anxiety (10%)\n   - Apply age/gender factors\n\n3. Test Recommendations:\n   - ECG (immediate)\n   - Cardiac enzymes\n   - Chest X-ray\n\n4. Treatment Protocol:\n   - If confirmed MI: Emergency protocol\n   - Monitor vital signs\n   - Medication contraindications check\n\nResult: 95% diagnostic accuracy with explanation of reasoning chain and confidence levels for each step.'
  },
  {
    id: 'cognitive-pipelines',
    name: 'Cognitive Processing Pipelines',
    abbr: 'CPP',
    icon: 'üß†',
    color: 'from-indigo-500 to-blue-600',
    category: 'cognitive-architectures',
    description: 'Sequential cognitive processing stages that mimic human thinking patterns and mental models',
    features: [
      'Multi-stage processing',
      'Working memory simulation',
      'Attention mechanisms',
      'Cognitive load management',
      'Mental model construction',
      'Metacognitive monitoring'
    ],
    useCases: ['problem-solving', 'learning-systems', 'decision-support', 'cognitive-simulation'],
    complexity: 'high',
    example: 'Complex Problem Solving Pipeline:\n\nStage 1: Problem Comprehension\n‚Ä¢ Parse problem statement\n‚Ä¢ Identify key variables and constraints\n‚Ä¢ Activate relevant knowledge schemas\n‚Ä¢ Working memory load: 3/7 items\n\nStage 2: Mental Model Construction\n‚Ä¢ Build internal representation\n‚Ä¢ Map relationships between elements\n‚Ä¢ Generate initial hypotheses\n‚Ä¢ Attention focus: Problem structure\n\nStage 3: Solution Generation\n‚Ä¢ Apply relevant strategies\n‚Ä¢ Generate multiple approaches\n‚Ä¢ Evaluate feasibility of each\n‚Ä¢ Working memory: Solutions + constraints\n\nStage 4: Solution Evaluation\n‚Ä¢ Test solutions against constraints\n‚Ä¢ Estimate success probability\n‚Ä¢ Consider implementation complexity\n‚Ä¢ Metacognitive assessment: "Am I on track?"\n\nStage 5: Solution Refinement\n‚Ä¢ Optimize selected approach\n‚Ä¢ Handle edge cases\n‚Ä¢ Plan implementation steps\n‚Ä¢ Final coherence check\n\nCognitive Monitoring:\n‚Ä¢ Track mental effort expenditure\n‚Ä¢ Manage attention allocation\n‚Ä¢ Monitor working memory capacity\n‚Ä¢ Adjust processing depth dynamically'
  },
  {
    id: 'hybrid-reasoning',
    name: 'Hybrid Reasoning Systems',
    abbr: 'HRS',
    icon: '‚öñÔ∏è',
    color: 'from-blue-500 to-cyan-600',
    category: 'cognitive-architectures',
    description: 'Integration of symbolic logic with neural processing for robust reasoning capabilities',
    features: [
      'Symbolic-neural integration',
      'Logic rule enforcement',
      'Pattern recognition fusion',
      'Uncertainty handling',
      'Explainable decisions',
      'Knowledge grounding'
    ],
    useCases: ['expert-systems', 'automated-reasoning', 'knowledge-integration', 'decision-support'],
    complexity: 'high',
    example: 'Legal Case Analysis System:\n\nSymbolic Component:\n‚Ä¢ Legal precedent database\n‚Ä¢ Statutory rules and regulations\n‚Ä¢ Case law relationships\n‚Ä¢ Logical inference engine\n\nNeural Component:\n‚Ä¢ Document similarity analysis\n‚Ä¢ Natural language understanding\n‚Ä¢ Pattern recognition in cases\n‚Ä¢ Outcome probability estimation\n\nHybrid Integration Process:\n\n1. Case Input Analysis:\n   ‚Ä¢ Neural: Extract key facts from documents\n   ‚Ä¢ Symbolic: Map facts to legal concepts\n   ‚Ä¢ Result: Structured case representation\n\n2. Precedent Matching:\n   ‚Ä¢ Neural: Semantic similarity to past cases\n   ‚Ä¢ Symbolic: Exact rule matching\n   ‚Ä¢ Fusion: Weighted relevance scores\n\n3. Legal Reasoning:\n   ‚Ä¢ Symbolic: Apply legal rules strictly\n   ‚Ä¢ Neural: Consider contextual factors\n   ‚Ä¢ Integration: Balanced judgment\n\n4. Outcome Prediction:\n   ‚Ä¢ Neural: Statistical likelihood based on patterns\n   ‚Ä¢ Symbolic: Rule-based deterministic outcomes\n   ‚Ä¢ Hybrid: Confidence-weighted predictions\n\nAdvantages:\n‚Ä¢ Neural flexibility + Symbolic precision\n‚Ä¢ Explainable reasoning chains\n‚Ä¢ Robust handling of edge cases\n‚Ä¢ 89% accuracy improvement over single approaches'
  },
  {
    id: 'multi-modal-cognition',
    name: 'Multi-Modal Cognitive Processing',
    abbr: 'MMCP',
    icon: 'üé≠',
    color: 'from-cyan-500 to-teal-600',
    category: 'cognitive-architectures',
    description: 'Integrated processing of multiple information modalities with cross-modal reasoning',
    features: [
      'Cross-modal integration',
      'Modality-specific processing',
      'Attention coordination',
      'Multi-sensory fusion',
      'Context switching',
      'Unified representation'
    ],
    useCases: ['multimedia-analysis', 'robotics', 'human-computer-interaction', 'content-understanding'],
    complexity: 'high',
    example: 'Autonomous Vehicle Perception:\n\nInput Modalities:\n‚Ä¢ Visual: Camera feeds (RGB, depth)\n‚Ä¢ Audio: Microphone array\n‚Ä¢ Sensor: LiDAR, radar, GPS\n‚Ä¢ Internal: Vehicle state, navigation\n\nModality-Specific Processing:\n\n1. Visual Processing:\n   ‚Ä¢ Object detection (cars, pedestrians)\n   ‚Ä¢ Lane line recognition\n   ‚Ä¢ Traffic sign identification\n   ‚Ä¢ Distance estimation\n\n2. Audio Processing:\n   ‚Ä¢ Emergency vehicle sirens\n   ‚Ä¢ Engine sounds (vehicle proximity)\n   ‚Ä¢ Construction noise\n   ‚Ä¢ Voice commands\n\n3. Sensor Processing:\n   ‚Ä¢ Precise distance measurements\n   ‚Ä¢ Weather conditions\n   ‚Ä¢ Road surface conditions\n   ‚Ä¢ Vehicle dynamics\n\nCross-Modal Integration:\n\n1. Attention Coordination:\n   ‚Ä¢ Siren detected ‚Üí Focus visual search\n   ‚Ä¢ Poor visibility ‚Üí Increase sensor reliance\n   ‚Ä¢ GPS uncertainty ‚Üí Enhance visual landmarks\n\n2. Conflict Resolution:\n   ‚Ä¢ Visual: No obstacle detected\n   ‚Ä¢ LiDAR: Object at 50m ahead\n   ‚Ä¢ Resolution: Trust LiDAR, investigate visually\n\n3. Unified World Model:\n   ‚Ä¢ Combine all modalities into coherent scene\n   ‚Ä¢ Track objects across sensory channels\n   ‚Ä¢ Predict future states\n   ‚Ä¢ Make driving decisions\n\nResult: 40% improvement in object detection, 60% better performance in adverse conditions'
  },
  {
    id: 'adaptive-thinking',
    name: 'Adaptive Thinking Systems',
    abbr: 'ATS',
    icon: 'üîÑ',
    color: 'from-teal-500 to-green-600',
    category: 'cognitive-architectures',
    description: 'Dynamic cognitive adaptation that adjusts thinking strategies based on problem characteristics',
    features: [
      'Strategy selection',
      'Cognitive flexibility',
      'Meta-reasoning',
      'Learning from experience',
      'Context sensitivity',
      'Performance optimization'
    ],
    useCases: ['adaptive-learning', 'problem-solving', 'decision-making', 'cognitive-assistance'],
    complexity: 'high',
    example: 'Adaptive Tutoring System:\n\nStudent Profile:\n‚Ä¢ Learning style: Visual learner\n‚Ä¢ Current level: Intermediate algebra\n‚Ä¢ Struggle areas: Word problems\n‚Ä¢ Strengths: Geometric reasoning\n\nProblem Analysis:\n‚Ä¢ Type: Complex word problem\n‚Ä¢ Required skills: Equation setup, solving\n‚Ä¢ Difficulty: High for current level\n‚Ä¢ Context: Real-world application\n\nAdaptive Strategy Selection:\n\n1. Initial Approach Assessment:\n   ‚Ä¢ Standard method: Abstract algebraic approach\n   ‚Ä¢ Student profile: Likely to struggle\n   ‚Ä¢ Adaptation needed: Visual/geometric approach\n\n2. Strategy Adaptation:\n   ‚Ä¢ Convert to visual representation\n   ‚Ä¢ Use diagram-based explanation\n   ‚Ä¢ Break into smaller visual steps\n   ‚Ä¢ Connect to geometric concepts\n\n3. Dynamic Adjustment:\n   ‚Ä¢ Monitor student responses\n   ‚Ä¢ If still struggling: Add manipulatives\n   ‚Ä¢ If progressing: Gradually abstract\n   ‚Ä¢ Track comprehension signals\n\n4. Learning Integration:\n   ‚Ä¢ Success pattern: Visual ‚Üí Abstract works\n   ‚Ä¢ Update student profile\n   ‚Ä¢ Apply to future similar problems\n   ‚Ä¢ Personalize instruction path\n\nMeta-Cognitive Monitoring:\n‚Ä¢ "Is this approach working?"\n‚Ä¢ "Should I try a different strategy?"\n‚Ä¢ "What has worked for this student before?"\n‚Ä¢ "How can I build on their strengths?"\n\nResults:\n‚Ä¢ 70% improvement in problem-solving success\n‚Ä¢ 85% increase in student engagement\n‚Ä¢ Reduced time to mastery by 40%'
  }
];