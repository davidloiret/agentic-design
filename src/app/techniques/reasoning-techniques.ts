import { Technique } from './types';

export const reasoningTechniques: Technique[] = [
  {
    id: 'cot',
    name: 'Chain-of-Thought',
    abbr: 'CoT',
    icon: 'üîó',
    color: 'from-blue-500 to-blue-600',
    category: 'reasoning-techniques',
    description: 'Breaks down complex problems into step-by-step intermediate reasoning steps',
    features: [
      'Decomposes complex problems into manageable sub-problems',
      'Provides transparent reasoning process',
      'Uses "think step by step" approach',
      'Foundation for advanced agent actions'
    ],
    useCases: ['complex-qa', 'math', 'planning', 'analysis'],
    complexity: 'low',
    example: 'Problem: "If a train travels 120 miles in 2 hours, and then 180 miles in 3 hours, what is its average speed?"\n\nCoT Response:\n1. First segment: 120 miles in 2 hours\n2. Second segment: 180 miles in 3 hours\n3. Total distance: 120 + 180 = 300 miles\n4. Total time: 2 + 3 = 5 hours\n5. Average speed: 300 √∑ 5 = 60 mph'
  },
  {
    id: 'tot',
    name: 'Tree-of-Thought',
    abbr: 'ToT',
    icon: 'üå≥',
    color: 'from-green-500 to-green-600',
    category: 'reasoning-techniques',
    description: 'Explores multiple reasoning paths through branching and backtracking',
    features: [
      'Tree structure for exploring alternatives',
      'Supports backtracking and revision',
      'Evaluates multiple solution paths',
      'Ideal for strategic planning and complex decisions'
    ],
    useCases: ['planning', 'complex-qa', 'creative', 'optimization'],
    complexity: 'high',
    example: 'Problem: "Plan a 3-day trip to Paris with a $1000 budget"\n\nToT Branches:\n‚îú‚îÄ Budget-focused path\n‚îÇ  ‚îú‚îÄ Hostels + street food\n‚îÇ  ‚îî‚îÄ Airbnb + cooking\n‚îú‚îÄ Experience-focused path\n‚îÇ  ‚îú‚îÄ Mid-range hotel + restaurants\n‚îÇ  ‚îî‚îÄ Budget hotel + select dining\n‚îî‚îÄ Balanced path (selected)\n   ‚îú‚îÄ Budget hotel\n   ‚îú‚îÄ Mix of dining options\n   ‚îî‚îÄ Free/low-cost attractions'
  },
  {
    id: 'got',
    name: 'Graph-of-Thought',
    abbr: 'GoT',
    icon: 'üï∏Ô∏è',
    color: 'from-emerald-500 to-teal-600',
    category: 'reasoning-techniques',
    description: 'Non-linear reasoning with thoughts as nodes and dependencies as edges',
    features: [
      'Non-linear thought exploration',
      'Thoughts as vertices, dependencies as edges',
      'Synergistic idea combination',
      'Feedback loops and backtracking',
      'Complex network distillation',
      'Superior to linear CoT for complex problems'
    ],
    useCases: ['creative-problem-solving', 'research-synthesis', 'strategic-planning', 'complex-analysis', 'innovation'],
    complexity: 'high',
    example: 'Problem: "Design sustainable city planning strategy"\n\nGoT Network:\n[Energy Systems] ‚Üê‚Üí [Transportation]\n       ‚Üì influences     ‚Üë affects\n[Housing Policy] ‚Üê‚Üí [Economic Zones]\n       ‚Üì connects       ‚Üë enables\n[Green Spaces] ‚Üê‚Üí [Water Management]\n\nSynergistic Connections:\n‚Ä¢ Solar + Electric Transit = Carbon neutral transport\n‚Ä¢ Green Roofs + Water Collection = Urban farming\n‚Ä¢ Mixed-use + Public Transit = Reduced commuting\n\nDistilled Solution: Integrated eco-districts with\nenergy-positive buildings, autonomous transit,\nand circular resource management'
  },
  {
    id: 'react',
    name: 'ReAct',
    abbr: '',
    icon: 'üéØ',
    color: 'from-red-500 to-red-600',
    category: 'reasoning-techniques',
    description: 'Combines reasoning with acting through external tool use',
    features: [
      'Thought ‚Üí Action ‚Üí Observation loop',
      'Integrates external tools',
      'Dynamic strategy adaptation',
      'Real-time environmental feedback'
    ],
    useCases: ['research', 'complex-qa', 'automation', 'investigation'],
    complexity: 'high',
    example: 'Task: "Find the current CEO of OpenAI"\n\nReAct Process:\nThought: Need to search for current OpenAI leadership\nAction: search("OpenAI CEO 2024")\nObservation: Results show Sam Altman returned as CEO\nThought: Should verify with official source\nAction: fetch("openai.com/about")\nObservation: Confirmed Sam Altman as CEO\nThought: Have reliable answer\nAction: finish("Sam Altman is the current CEO of OpenAI")'
  },
  {
    id: 'fot',
    name: 'Forest-of-Thoughts',
    abbr: 'FoT',
    icon: 'üå≤',
    color: 'from-emerald-500 to-green-600',
    category: 'reasoning-techniques',
    description: 'Generates multiple reasoning trees to enhance diversity and robustness',
    features: [
      'Multiple independent reasoning trees',
      'Enhanced solution diversity',
      'Robust error tolerance',
      'Parallel reasoning exploration',
      'Cross-tree validation',
      'Best path selection'
    ],
    useCases: ['complex-problem-solving', 'robust-decision-making', 'creative-reasoning', 'strategic-planning'],
    complexity: 'high',
    example: 'Problem: "Optimize supply chain resilience"\n\nForest Generation:\n\nTree 1 (Cost Focus):\n‚îú‚îÄ Minimize transportation costs\n‚îú‚îÄ Consolidate suppliers\n‚îî‚îÄ Bulk ordering strategies\n\nTree 2 (Risk Focus):\n‚îú‚îÄ Geographic diversification\n‚îú‚îÄ Backup supplier networks\n‚îî‚îÄ Real-time monitoring\n\nTree 3 (Speed Focus):\n‚îú‚îÄ Regional distribution centers\n‚îú‚îÄ Predictive inventory\n‚îî‚îÄ Express logistics\n\nCross-Tree Synthesis:\nOptimal solution combines elements:\n‚Ä¢ Multi-supplier strategy (Tree 2)\n‚Ä¢ Regional hubs (Tree 3)\n‚Ä¢ Smart inventory (Tree 1 + Tree 3)\n\nResult: 25% cost reduction with 40% improved resilience'
  },
  {
    id: 'metacognitive-monitoring',
    name: 'Metacognitive Monitoring',
    abbr: 'MCM',
    icon: 'üß†',
    color: 'from-purple-500 to-indigo-600',
    category: 'reasoning-techniques',
    description: 'Self-awareness and monitoring of reasoning quality and confidence',
    features: [
      'Reasoning quality assessment',
      'Confidence estimation',
      'Knowledge gap detection',
      'Strategy effectiveness monitoring',
      'Adaptive reasoning adjustment',
      'Error anticipation'
    ],
    useCases: ['high-stakes-decisions', 'adaptive-reasoning', 'quality-control', 'educational-systems'],
    complexity: 'high',
    example: 'Medical Diagnosis Task:\n\nPatient: "Chest pain, shortness of breath"\n\nMetacognitive Process:\n\n1. Initial Assessment:\n   ‚Ä¢ Confidence: 60% (limited symptoms)\n   ‚Ä¢ Knowledge gaps: Medical history, vitals\n   ‚Ä¢ Strategy: Gather more information\n\n2. Information Gathering:\n   ‚Ä¢ Added: Age 45, smoker, family history\n   ‚Ä¢ Confidence: 85% (cardiac risk factors)\n   ‚Ä¢ Quality check: Consistent with protocols\n\n3. Differential Analysis:\n   ‚Ä¢ Primary: Acute coronary syndrome\n   ‚Ä¢ Secondary: Pulmonary embolism\n   ‚Ä¢ Confidence: 90% (strong evidence)\n\n4. Final Monitoring:\n   ‚Ä¢ Reasoning quality: High (evidence-based)\n   ‚Ä¢ Recommendation reliability: 95%\n   ‚Ä¢ Escalation needed: Yes (emergency care)\n\nMetacognitive Output:\n"High confidence diagnosis with strong evidence support. Recommend immediate medical attention."'
  },
  {
    id: 'test-time-compute',
    name: 'Test-Time Compute Scaling',
    abbr: 'TTC',
    icon: '‚ö°',
    color: 'from-yellow-500 to-orange-600',
    category: 'reasoning-techniques',
    description: 'Dynamically allocates computational resources based on problem complexity',
    features: [
      'Dynamic compute allocation',
      'Complexity-aware scaling',
      'Adaptive thinking time',
      'Resource optimization',
      'Quality-compute trade-offs',
      'Real-time adjustment'
    ],
    useCases: ['complex-mathematics', 'research-analysis', 'optimization-problems', 'real-time-systems'],
    complexity: 'high',
    example: 'Mathematical Proof Challenge:\n\nProblem: "Prove Fermat\'s Last Theorem for n=3"\n\nCompute Scaling Process:\n\n1. Complexity Assessment:\n   ‚Ä¢ Problem type: Mathematical proof\n   ‚Ä¢ Difficulty: Very high\n   ‚Ä¢ Allocated compute: 10x standard\n\n2. Iterative Reasoning (Extended):\n   ‚Ä¢ Phase 1: Historical approach analysis (2x compute)\n   ‚Ä¢ Phase 2: Elliptic curve exploration (4x compute)\n   ‚Ä¢ Phase 3: Modular forms investigation (6x compute)\n   ‚Ä¢ Phase 4: Proof verification (10x compute)\n\n3. Quality Monitoring:\n   ‚Ä¢ Step validation at each phase\n   ‚Ä¢ Logical consistency checks\n   ‚Ä¢ Mathematical rigor assessment\n\n4. Adaptive Adjustment:\n   ‚Ä¢ Detected complexity increase\n   ‚Ä¢ Scaled to 15x compute\n   ‚Ä¢ Extended reasoning depth\n\nResult: Complete proof with 99.8% confidence\nCompute efficiency: 3x better than fixed allocation'
  },
  {
    id: 'reflective-mcts',
    name: 'Reflective Monte Carlo Tree Search',
    abbr: 'R-MCTS',
    icon: 'üéØ',
    color: 'from-red-500 to-pink-600',
    category: 'reasoning-techniques',
    description: 'Enhanced MCTS with contrastive reflection for improved exploration',
    features: [
      'Contrastive reflection mechanism',
      'Enhanced exploration strategies',
      'Self-improving search',
      'Quality-guided tree expansion',
      'Adaptive selection policies',
      '6-30% performance improvement'
    ],
    useCases: ['strategic-planning', 'game-playing', 'optimization', 'decision-making'],
    complexity: 'high',
    example: 'Strategic Business Planning:\n\nObjective: "Enter new market segment"\n\nR-MCTS Process:\n\n1. Tree Construction:\n   ‚îú‚îÄ Market Research\n   ‚îÇ  ‚îú‚îÄ Competitor analysis\n   ‚îÇ  ‚îî‚îÄ Customer surveys\n   ‚îú‚îÄ Product Development\n   ‚îÇ  ‚îú‚îÄ MVP strategy\n   ‚îÇ  ‚îî‚îÄ Full product launch\n   ‚îî‚îÄ Partnership Strategy\n      ‚îú‚îÄ Strategic alliances\n      ‚îî‚îÄ Acquisition targets\n\n2. Reflective Analysis:\n   ‚Ä¢ Contrast successful vs. failed strategies\n   ‚Ä¢ Identify key success factors\n   ‚Ä¢ Update exploration priorities\n\n3. Enhanced Selection:\n   ‚Ä¢ Weighted by reflection insights\n   ‚Ä¢ Focus on high-potential paths\n   ‚Ä¢ Avoid previously failed approaches\n\n4. Iterative Improvement:\n   ‚Ä¢ 15 exploration cycles\n   ‚Ä¢ Continuous strategy refinement\n   ‚Ä¢ Quality-guided expansion\n\nResult: Optimal market entry strategy\nConfidence: 92% (validated against 50+ scenarios)\nImprovement: 30% better than standard MCTS'
  },
  {
    id: 'least-to-most',
    name: 'Least-to-Most Prompting',
    abbr: 'LtM',
    icon: 'üî¢',
    color: 'from-green-500 to-emerald-600',
    category: 'reasoning-techniques',
    description: 'Progressive problem decomposition from simple to complex components',
    features: [
      'Hierarchical problem breakdown',
      'Bottom-up solution building',
      'Progressive complexity handling',
      'Builds on simpler solutions',
      'Reduces cognitive load',
      'Systematic approach to complex problems'
    ],
    useCases: ['mathematical-problems', 'programming-tasks', 'complex-analysis', 'educational-content'],
    complexity: 'medium',
    example: 'Problem: "Calculate the total cost of carpeting a house with 5 rooms of different sizes"\n\nLeast-to-Most Decomposition:\n\n1. Simplest Component:\n   ‚Ä¢ Calculate area of one rectangular room\n   ‚Ä¢ Room 1: 12ft √ó 10ft = 120 sq ft\n\n2. Add Complexity:\n   ‚Ä¢ Calculate multiple rectangular rooms\n   ‚Ä¢ Room 2: 15ft √ó 12ft = 180 sq ft\n   ‚Ä¢ Room 3: 10ft √ó 10ft = 100 sq ft\n\n3. Handle Irregular Shapes:\n   ‚Ä¢ Room 4 (L-shaped): Break into rectangles\n   ‚Ä¢ Section A: 8ft √ó 6ft = 48 sq ft\n   ‚Ä¢ Section B: 4ft √ó 5ft = 20 sq ft\n   ‚Ä¢ Total: 68 sq ft\n\n4. Most Complex:\n   ‚Ä¢ Room 5 (curved wall): Use approximation\n   ‚Ä¢ Treat as rectangle with adjustment: 14ft √ó 11ft √ó 0.9 = 138 sq ft\n\n5. Final Integration:\n   ‚Ä¢ Total area: 120 + 180 + 100 + 68 + 138 = 606 sq ft\n   ‚Ä¢ Cost: 606 √ó $4.50/sq ft = $2,727\n\nAdvantage: Each step builds on previous, making complex calculation manageable'
  },
  {
    id: 'analogical-reasoning',
    name: 'Analogical Reasoning',
    abbr: 'AR',
    icon: 'üîÑ',
    color: 'from-orange-500 to-red-600',
    category: 'reasoning-techniques',
    description: 'Solves problems by finding and applying similar patterns from known domains',
    features: [
      'Pattern recognition across domains',
      'Knowledge transfer from familiar contexts',
      'Structural similarity mapping',
      'Creative problem-solving',
      'Learning from examples',
      'Cross-domain insight generation'
    ],
    useCases: ['creative-problem-solving', 'innovation', 'learning', 'design-thinking'],
    complexity: 'medium',
    example: 'Problem: "Design an efficient customer service system for a growing startup"\n\nAnalogical Reasoning Process:\n\n1. Identify Source Domain:\n   ‚Ä¢ Restaurant service system (familiar domain)\n   ‚Ä¢ Host greets ‚Üí Server takes order ‚Üí Kitchen prepares ‚Üí Server delivers\n\n2. Map Structural Elements:\n   ‚Ä¢ Host = Initial contact/chatbot\n   ‚Ä¢ Server = Customer service representative\n   ‚Ä¢ Kitchen = Technical support/solutions team\n   ‚Ä¢ Delivery = Problem resolution\n\n3. Apply Analogical Insights:\n   ‚Ä¢ Queue management (like restaurant waiting)\n   ‚Ä¢ Triage system (different servers for different needs)\n   ‚Ä¢ Kitchen ticket system ‚Üí Support ticket system\n   ‚Ä¢ Quality checks before delivery ‚Üí Solution validation\n\n4. Adapt to Target Domain:\n   ‚Ä¢ Chatbot handles initial screening\n   ‚Ä¢ Tier 1 support for common issues\n   ‚Ä¢ Specialized teams for complex problems\n   ‚Ä¢ Follow-up system for satisfaction\n\n5. Novel Insights from Analogy:\n   ‚Ä¢ Peak hour staffing patterns\n   ‚Ä¢ Cross-training for flexibility\n   ‚Ä¢ Customer feedback loop (like restaurant reviews)\n\nResult: Efficient multi-tier support system inspired by restaurant operations'
  },
  {
    id: 'causal-reasoning',
    name: 'Causal Reasoning',
    abbr: 'CR',
    icon: '‚ö°',
    color: 'from-blue-500 to-purple-600',
    category: 'reasoning-techniques',
    description: 'Establishes and follows explicit cause-and-effect relationships',
    features: [
      'Cause-and-effect chain construction',
      'Root cause identification',
      'Intervention planning',
      'Counterfactual thinking',
      'Temporal relationship modeling',
      'Mechanism understanding'
    ],
    useCases: ['problem-diagnosis', 'strategic-planning', 'risk-assessment', 'decision-making'],
    complexity: 'high',
    example: 'Problem: "Company sales dropped 30% last quarter - identify causes and solutions"\n\nCausal Reasoning Chain:\n\n1. Direct Observation:\n   ‚Ä¢ Effect: 30% sales decrease\n   ‚Ä¢ Timeline: Last quarter (specific period)\n\n2. Immediate Causes (Level 1):\n   ‚Ä¢ Fewer customer inquiries (-40%)\n   ‚Ä¢ Lower conversion rate (25% ‚Üí 18%)\n   ‚Ä¢ Reduced average order value ($500 ‚Üí $420)\n\n3. Root Causes (Level 2):\n   ‚Ä¢ Marketing budget cut by 50% ‚Üí Fewer inquiries\n   ‚Ä¢ New competitor launched ‚Üí Price pressure\n   ‚Ä¢ Key salesperson left ‚Üí Lower conversion\n   ‚Ä¢ Economic uncertainty ‚Üí Smaller orders\n\n4. Underlying Mechanisms (Level 3):\n   ‚Ä¢ Budget cuts due to investor pressure\n   ‚Ä¢ Competitor offering 20% lower prices\n   ‚Ä¢ No knowledge transfer when salesperson left\n   ‚Ä¢ Inflation affecting customer budgets\n\n5. Causal Intervention Strategy:\n   ‚Ä¢ Immediate: Targeted marketing to high-value segments\n   ‚Ä¢ Short-term: Sales training for remaining team\n   ‚Ä¢ Medium-term: Value proposition differentiation\n   ‚Ä¢ Long-term: Operational efficiency to compete on price\n\nResult: Systematic intervention plan addressing root causes, not just symptoms'
  },
  {
    id: 'abductive-reasoning',
    name: 'Abductive Reasoning',
    abbr: 'ABR',
    icon: 'üîç',
    color: 'from-indigo-500 to-blue-600',
    category: 'reasoning-techniques',
    description: 'Infers the most likely explanation from incomplete observations',
    features: [
      'Best explanation inference',
      'Hypothesis generation',
      'Evidence-based reasoning',
      'Uncertainty handling',
      'Pattern completion',
      'Diagnostic reasoning'
    ],
    useCases: ['diagnosis', 'investigation', 'research', 'troubleshooting'],
    complexity: 'high',
    example: 'Problem: "Website traffic dropped 60% overnight - what happened?"\n\nAbductive Reasoning Process:\n\n1. Observations:\n   ‚Ä¢ Traffic drop: 60% decrease overnight\n   ‚Ä¢ Time: Started at 2:15 AM EST\n   ‚Ä¢ Geographic: All regions affected equally\n   ‚Ä¢ Device types: Mobile and desktop both affected\n\n2. Generate Hypotheses:\n   ‚Ä¢ H1: Server crash/technical failure\n   ‚Ä¢ H2: Search engine penalty\n   ‚Ä¢ H3: Major competitor launched\n   ‚Ä¢ H4: External link/referral source removed\n   ‚Ä¢ H5: DNS/hosting provider issue\n\n3. Evaluate Against Evidence:\n   ‚Ä¢ H1: Server logs show 99.9% uptime ‚ùå\n   ‚Ä¢ H2: Search rankings unchanged ‚ùå\n   ‚Ä¢ H3: Competitor analysis shows no major launches ‚ùå\n   ‚Ä¢ H4: Referral traffic from major source disappeared ‚úì\n   ‚Ä¢ H5: DNS resolution working normally ‚ùå\n\n4. Most Likely Explanation:\n   ‚Ä¢ Primary hypothesis: Major referral source removed links\n   ‚Ä¢ Supporting evidence: 65% of traffic historically from one news site\n   ‚Ä¢ Verification: Check if article with backlinks was removed\n\n5. Validation:\n   ‚Ä¢ Contacted news site: Confirmed article deletion due to policy change\n   ‚Ä¢ Timeline matches: Article removed at 2:10 AM EST\n\nResult: Identified root cause (external link removal) enabling targeted recovery strategy'
  },
  {
    id: 'step-back-prompting',
    name: 'Step-Back Prompting',
    abbr: 'SBP',
    icon: '‚Ü©Ô∏è',
    color: 'from-emerald-500 to-teal-600',
    category: 'reasoning-techniques',
    description: 'Abstracts to higher-level principles before tackling specific problems',
    features: [
      'High-level abstraction first',
      'Principle-based reasoning',
      'Conceptual framework establishment',
      'Reduces getting lost in details',
      'Improved reasoning accuracy',
      'Strategic thinking approach'
    ],
    useCases: ['complex-problem-solving', 'strategic-analysis', 'research', 'education'],
    complexity: 'medium',
    example: 'Problem: "Should our startup pivot from B2B to B2C?"\n\nStep-Back Prompting Process:\n\n1. Step Back to High-Level Question:\n   Original: "Should we pivot from B2B to B2C?"\n   Step-back: "What fundamental factors determine successful business model selection?"\n\n2. Establish General Principles:\n   ‚Ä¢ Market size and growth potential\n   ‚Ä¢ Team competencies and experience\n   ‚Ä¢ Resource requirements and availability\n   ‚Ä¢ Customer acquisition costs and lifetime value\n   ‚Ä¢ Competitive landscape dynamics\n   ‚Ä¢ Revenue model sustainability\n\n3. Apply Principles to Current Situation:\n   Market Analysis:\n   ‚Ä¢ B2B: $2B market, 15% growth, 200 competitors\n   ‚Ä¢ B2C: $15B market, 8% growth, 2000+ competitors\n   \n   Team Fit:\n   ‚Ä¢ Strong enterprise sales experience\n   ‚Ä¢ Limited consumer marketing expertise\n   ‚Ä¢ Technical product suited for business needs\n   \n   Economics:\n   ‚Ä¢ B2B: $50K LTV, $5K CAC (10:1 ratio)\n   ‚Ä¢ B2C: $200 LTV, $40 CAC (5:1 ratio)\n\n4. Synthesize Decision:\n   ‚Ä¢ Principles favor B2B: better team fit, superior unit economics\n   ‚Ä¢ B2C has larger market but higher competition and worse fit\n   ‚Ä¢ Recommendation: Stay B2B, optimize current model\n\nResult: Principled decision based on fundamental business factors, not surface-level trends'
  },
  {
    id: 'buffer-of-thoughts',
    name: 'Buffer of Thoughts',
    abbr: 'BoT',
    icon: 'üìä',
    color: 'from-violet-500 to-purple-600',
    category: 'reasoning-techniques',
    description: 'Maintains a dynamic buffer of reusable thought patterns for analogical reasoning',
    features: [
      'Meta-buffer of problem-solving strategies',
      'Analogical pattern matching',
      'Reusable thought templates',
      'Cross-problem knowledge transfer',
      'Continuous buffer updating',
      '15-30% accuracy improvement'
    ],
    useCases: ['complex-problem-solving', 'strategic-planning', 'innovation', 'knowledge-work'],
    complexity: 'high',
    example: 'Problem: "Optimize remote team productivity"\n\nBuffer of Thoughts Process:\n\n1. Query Buffer for Similar Patterns:\n   ‚Ä¢ Manufacturing efficiency optimization\n   ‚Ä¢ Sports team coordination\n   ‚Ä¢ Orchestra performance management\n   ‚Ä¢ Military unit coordination\n\n2. Extract Relevant Thought Patterns:\n   \n   From Manufacturing:\n   ‚Ä¢ Standardized processes reduce variation\n   ‚Ä¢ Clear metrics enable optimization\n   ‚Ä¢ Regular check-ins prevent quality drift\n   \n   From Sports Teams:\n   ‚Ä¢ Role clarity prevents overlap/gaps\n   ‚Ä¢ Practice sessions build coordination\n   ‚Ä¢ Game film review improves performance\n   \n   From Orchestra:\n   ‚Ä¢ Shared timing reference (conductor/metronome)\n   ‚Ä¢ Individual excellence + collective harmony\n   ‚Ä¢ Regular ensemble practice essential\n\n3. Adapt Patterns to Current Problem:\n   ‚Ä¢ Standardized processes ‚Üí Daily standups, templates\n   ‚Ä¢ Clear metrics ‚Üí Productivity dashboards, KPIs\n   ‚Ä¢ Regular check-ins ‚Üí Weekly retrospectives\n   ‚Ä¢ Role clarity ‚Üí RACI matrices, job descriptions\n   ‚Ä¢ Practice sessions ‚Üí Team collaboration exercises\n   ‚Ä¢ Shared timing ‚Üí Synchronized meeting schedules\n\n4. Synthesize Novel Solution:\n   ‚Ä¢ Implement "Remote Team Operating System"\n   ‚Ä¢ Daily coordination (like conductor)\n   ‚Ä¢ Weekly skill building (like practice)\n   ‚Ä¢ Monthly performance review (like game film)\n   ‚Ä¢ Standardized tools and processes\n\n5. Update Buffer with New Insights:\n   ‚Ä¢ Add "Remote team coordination" pattern\n   ‚Ä¢ Link to manufacturing, sports, orchestra patterns\n   ‚Ä¢ Store for future similar problems\n\nResult: 25% productivity improvement using analogical insights from diverse domains'
  },
  {
    id: 'skeleton-of-thoughts',
    name: 'Skeleton of Thoughts',
    abbr: 'SoT',
    icon: 'ü¶¥',
    color: 'from-gray-500 to-slate-600',
    category: 'reasoning-techniques',
    description: 'Creates structured yet adaptable reasoning frameworks that can be filled with specific details',
    features: [
      'Flexible reasoning scaffolds',
      'Structured yet adaptable outlines',
      'Reusable problem-solving templates',
      'Supports creative reasoning',
      'Efficient knowledge organization',
      'Guided but not rigid thinking'
    ],
    useCases: ['creative-problem-solving', 'content-creation', 'strategic-planning', 'research'],
    complexity: 'medium',
    example: 'Problem: "Launch a new product in competitive market"\n\nSkeleton of Thoughts Framework:\n\n1. Create Reasoning Skeleton:\n   ```\n   Product Launch Framework:\n   ‚îú‚îÄ Market Analysis\n   ‚îÇ  ‚îú‚îÄ [Competitive landscape]\n   ‚îÇ  ‚îú‚îÄ [Customer needs]\n   ‚îÇ  ‚îî‚îÄ [Market timing]\n   ‚îú‚îÄ Product Positioning\n   ‚îÇ  ‚îú‚îÄ [Unique value proposition]\n   ‚îÇ  ‚îú‚îÄ [Target segments]\n   ‚îÇ  ‚îî‚îÄ [Differentiation strategy]\n   ‚îú‚îÄ Go-to-Market Strategy\n   ‚îÇ  ‚îú‚îÄ [Marketing channels]\n   ‚îÇ  ‚îú‚îÄ [Pricing strategy]\n   ‚îÇ  ‚îî‚îÄ [Sales approach]\n   ‚îî‚îÄ Success Metrics\n      ‚îú‚îÄ [Leading indicators]\n      ‚îú‚îÄ [Lagging indicators]\n      ‚îî‚îÄ [Contingency plans]\n   ```\n\n2. Fill Skeleton with Specific Details:\n   Market Analysis:\n   ‚Ä¢ Competitive landscape: 5 major players, fragmented market\n   ‚Ä¢ Customer needs: 67% want mobile-first solution\n   ‚Ä¢ Market timing: COVID accelerated digital adoption\n   \n   Product Positioning:\n   ‚Ä¢ UVP: "Only mobile-native solution with offline capability"\n   ‚Ä¢ Target: Remote workers in developing markets\n   ‚Ä¢ Differentiation: Superior offline functionality\n   \n   Go-to-Market:\n   ‚Ä¢ Channels: Content marketing, partnership program\n   ‚Ä¢ Pricing: Freemium with $29/month premium tier\n   ‚Ä¢ Sales: Product-led growth with inside sales support\n\n3. Adaptive Framework Benefits:\n   ‚Ä¢ Structure prevents missing key considerations\n   ‚Ä¢ Flexibility allows creative solutions within framework\n   ‚Ä¢ Reusable for future product launches\n   ‚Ä¢ Guides thinking without constraining innovation\n\nResult: Comprehensive launch strategy with 40% faster planning through structured approach'
  },
];