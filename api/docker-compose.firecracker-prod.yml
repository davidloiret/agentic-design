version: '3.8'

services:
  firecracker-api:
    build:
      context: .
      dockerfile: Dockerfile.firecracker
    container_name: firecracker-api
    restart: unless-stopped
    privileged: true  # Required for KVM access
    devices:
      - /dev/kvm:/dev/kvm  # KVM device access
    volumes:
      - /opt/firecracker:/opt/firecracker:rw  # VM images and snapshots
      - /tmp:/tmp:rw  # Temporary files
      - ./logs:/app/logs:rw  # Application logs
    ports:
      - "8000:8000"  # API port
    environment:
      - SECURITY_LEVEL=sandbox
      - VM_POOL_SIZE=3
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
    networks:
      - firecracker-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 1G

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: firecracker-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx:rw
    depends_on:
      - firecracker-api
    networks:
      - firecracker-net
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: firecracker-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - firecracker-net
    profiles:
      - monitoring

  # Grafana for metrics visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: firecracker-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - firecracker-net
    profiles:
      - monitoring

networks:
  firecracker-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus_data:
  grafana_data: