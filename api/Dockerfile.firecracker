FROM ubuntu:22.04

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    curl \
    wget \
    qemu-utils \
    e2fsprogs \
    docker.io \
    kmod \
    pkg-config \
    libssl-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js and TypeScript tools
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g typescript ts-node tsx

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Create Rust template project with common dependencies pre-installed
RUN mkdir -p /opt/rust-template && cd /opt/rust-template && \
    cargo init --name sandbox && \
    echo '[package]\n\
name = "sandbox"\n\
version = "0.1.0"\n\
edition = "2021"\n\
\n\
[dependencies]\n\
tokio = { version = "1.0", features = ["full"] }\n\
serde = { version = "1.0", features = ["derive"] }\n\
serde_json = "1.0"\n\
anyhow = "1.0"\n\
chrono = "0.4"\n\
uuid = "1.0"\n\
async-trait = "0.1"\n\
clap = { version = "4.0", features = ["derive"] }\n\
rand = "0.8"\n\
\n\
[[bin]]\n\
name = "main"\n\
path = "src/main.rs"' > Cargo.toml && \
    echo 'fn main() {\n    println!("Hello, World!");\n}' > src/main.rs && \
    cargo build --release && \
    rm -rf target/release/deps/*.o target/release/deps/*.d target/release/build/*/out target/release/.fingerprint/*/invoked.timestamp

# Install Firecracker
RUN FIRECRACKER_VERSION="v1.4.1" && \
    ARCH=$(uname -m) && \
    wget -O /tmp/firecracker.tgz \
        "https://github.com/firecracker-microvm/firecracker/releases/download/${FIRECRACKER_VERSION}/firecracker-${FIRECRACKER_VERSION}-${ARCH}.tgz" && \
    tar -xzf /tmp/firecracker.tgz -C /tmp && \
    mv /tmp/release-${FIRECRACKER_VERSION}-${ARCH}/firecracker-${FIRECRACKER_VERSION}-${ARCH} /usr/local/bin/firecracker && \
    chmod +x /usr/local/bin/firecracker && \
    rm -rf /tmp/*

# Create Firecracker directories
RUN mkdir -p /opt/firecracker/{kernels,rootfs} && \
    mkdir -p /opt/firecracker/kernels/{python,rust,typescript} && \
    mkdir -p /opt/firecracker/rootfs/{python,rust,typescript}

WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Copy application files
COPY main.py firecracker_manager.py firecracker_manager_filesystem.py build_vm_images.py firecracker_docker_hybrid.py security_config.py simple_secure_executor.py guest_agent.py guest_agent_filesystem.py ./

# Build VM images (this will run during image build)
RUN python3 build_vm_images.py || echo "VM image building failed, will fallback to Docker execution"

# Expose port
EXPOSE 8000

# Set up proper permissions and run
RUN chmod +x /usr/local/bin/firecracker

# Create startup script for production
COPY start_firecracker_container.sh /usr/local/bin/start_firecracker_container.sh
RUN chmod +x /usr/local/bin/start_firecracker_container.sh

# Use privileged mode to access KVM
CMD ["/usr/local/bin/start_firecracker_container.sh"]